{"backend_state":"running","connection_file":"/projects/b36ed0b0-d7f5-416a-895a-d63c582b0b71/.local/share/jupyter/runtime/kernel-a6448707-a609-466f-93a5-95242739a843.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"end":1661371459540,"exec_count":283,"id":"3bf5aa","input":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns","kernel":"ds_env","pos":0,"start":1661371459537,"state":"done","type":"cell"}
{"end":1661371459721,"exec_count":284,"id":"d7c07d","input":"df = pd.read_csv('diabetes_data_upload.csv')","kernel":"ds_env","pos":1,"start":1661371459714,"state":"done","type":"cell"}
{"end":1661371459883,"exec_count":285,"id":"836a37","input":"results = []\nfor col in df.columns:\n    missing_or_not = df[col].isnull().values.any()\n    print(col + \":\" + str(missing_or_not))","kernel":"ds_env","output":{"0":{"name":"stdout","text":"Age:False\nGender:False\nPolyuria:False\nPolydipsia:False\nsudden weight loss:False\nweakness:False\nPolyphagia:False\nGenital thrush:False\nvisual blurring:False\nItching:False\nIrritability:False\ndelayed healing:False\npartial paresis:False\nmuscle stiffness:False\nAlopecia:False\nObesity:False\nclass:False\n"}},"pos":2,"start":1661371459868,"state":"done","type":"cell"}
{"end":1661371460089,"exec_count":286,"id":"c1dd15","input":"def convert(x):\n    if x == 'Yes'or x == 'Male' or x == 'Positive':\n        return 1\n    else:\n        return 0","kernel":"ds_env","pos":3,"start":1661371460080,"state":"done","type":"cell"}
{"end":1661371460264,"exec_count":287,"id":"ec73bb","input":"for col in df.columns:\n    if col != 'Age':\n        df[col] = df[col].apply(convert)","kernel":"ds_env","pos":4,"start":1661371460249,"state":"done","type":"cell"}
{"end":1661371460470,"exec_count":288,"id":"40ef32","input":"Drop_Columns = ['class']\nx = df.drop(Drop_Columns,axis=1)\ny = df[['class']]","kernel":"ds_env","pos":5,"start":1661371460464,"state":"done","type":"cell"}
{"end":1661371460908,"exec_count":289,"id":"7224ac","input":"Drop_Columns = ['class', 'Age', 'weakness', 'Genital thrush', 'Itching', 'delayed healing', 'muscle stiffness', 'Obesity']\nx = df.drop(Drop_Columns,axis=1)\ny = df['class']","kernel":"ds_env","pos":6,"start":1661371460896,"state":"done","type":"cell"}
{"end":1661371461300,"exec_count":290,"id":"712647","input":"x","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Gender</th>\n      <th>Polyuria</th>\n      <th>Polydipsia</th>\n      <th>sudden weight loss</th>\n      <th>Polyphagia</th>\n      <th>visual blurring</th>\n      <th>Irritability</th>\n      <th>partial paresis</th>\n      <th>Alopecia</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>515</th>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>516</th>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>517</th>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>518</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>519</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>520 rows × 9 columns</p>\n</div>","text/plain":"     Gender  Polyuria  Polydipsia  sudden weight loss  Polyphagia  \\\n0         1         0           1                   0           0   \n1         1         0           0                   0           0   \n2         1         1           0                   0           1   \n3         1         0           0                   1           1   \n4         1         1           1                   1           1   \n..      ...       ...         ...                 ...         ...   \n515       0         1           1                   1           1   \n516       0         1           1                   1           1   \n517       0         1           1                   1           1   \n518       0         0           0                   0           0   \n519       1         0           0                   0           0   \n\n     visual blurring  Irritability  partial paresis  Alopecia  \n0                  0             0                0         1  \n1                  1             0                1         1  \n2                  0             0                0         1  \n3                  0             0                0         0  \n4                  1             1                1         1  \n..               ...           ...              ...       ...  \n515                0             0                1         0  \n516                0             1                1         0  \n517                1             0                1         0  \n518                1             0                0         1  \n519                0             0                0         0  \n\n[520 rows x 9 columns]"},"exec_count":290}},"pos":6.5,"start":1661371461289,"state":"done","type":"cell"}
{"end":1661371461494,"exec_count":291,"id":"67baee","input":"# train test split","kernel":"ds_env","pos":7,"start":1661371461486,"state":"done","type":"cell"}
{"end":1661371461675,"exec_count":292,"id":"0f4459","input":"import sklearn\nfrom sklearn.model_selection import train_test_split","kernel":"ds_env","pos":8,"start":1661371461672,"state":"done","type":"cell"}
{"end":1661371461880,"exec_count":293,"id":"bb431d","input":"x_train, x_test ,y_train, y_test = train_test_split(x, y)","kernel":"ds_env","pos":9,"start":1661371461870,"state":"done","type":"cell"}
{"end":1661371462053,"exec_count":294,"id":"876b86","input":"print(x_train.shape)\nprint(y_train.shape)\nprint(x_test.shape)\nprint(y_test.shape)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"(390, 9)\n(390,)\n(130, 9)\n(130,)\n"}},"pos":9.25,"start":1661371462045,"state":"done","type":"cell"}
{"end":1661371462275,"exec_count":295,"id":"d8f006","input":"#Machine Learning Model/Decision Tree","kernel":"ds_env","pos":9.5,"start":1661371462272,"state":"done","type":"cell"}
{"end":1661371463028,"exec_count":297,"id":"4bbad8","input":"clf = GridSearchCV(tree.DecisionTreeClassifier(), parameters)\nclf.fit(x_train, y_train)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(estimator=DecisionTreeClassifier(),\n             param_grid={&#x27;criterion&#x27;: (&#x27;gini&#x27;, &#x27;entropy&#x27;, &#x27;log_loss&#x27;),\n                         &#x27;splitter&#x27;: (&#x27;best&#x27;, &#x27;random&#x27;)})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" ><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(estimator=DecisionTreeClassifier(),\n             param_grid={&#x27;criterion&#x27;: (&#x27;gini&#x27;, &#x27;entropy&#x27;, &#x27;log_loss&#x27;),\n                         &#x27;splitter&#x27;: (&#x27;best&#x27;, &#x27;random&#x27;)})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" ><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" ><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier()</pre></div></div></div></div></div></div></div></div></div></div>","text/plain":"GridSearchCV(estimator=DecisionTreeClassifier(),\n             param_grid={'criterion': ('gini', 'entropy', 'log_loss'),\n                         'splitter': ('best', 'random')})"},"exec_count":297}},"pos":11,"start":1661371462715,"state":"done","type":"cell"}
{"end":1661371463037,"exec_count":298,"id":"9aa71a","input":"clf.best_params_","kernel":"ds_env","output":{"0":{"data":{"text/plain":"{'criterion': 'entropy', 'splitter': 'best'}"},"exec_count":298}},"pos":12,"start":1661371463031,"state":"done","type":"cell"}
{"end":1661371463107,"exec_count":299,"id":"5223f7","input":"y_hat = clf.predict(x_test)","kernel":"ds_env","pos":13,"start":1661371463090,"state":"done","type":"cell"}
{"end":1661371463312,"exec_count":300,"id":"8b27fa","input":"\nfig = px.imshow(confusion_matrix(y_test, y_hat), text_auto=True)\n\nfig.write_html(\"DecisionTrees.html\")\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"ef021da69c37178a0b77c1177ac562f3e9f807d3"}}},"pos":14,"start":1661371463246,"state":"done","type":"cell"}
{"end":1661371463817,"exec_count":301,"id":"c1f8e9","input":"#MSE\ntotal_squared_error = (np.sum((y_test - y_hat)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have \nprint(mean_squared_error)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"0.06153846153846154\n"}},"pos":15,"start":1661371463813,"state":"done","type":"cell"}
{"end":1661371464051,"exec_count":302,"id":"921d5a","input":"#Accuracy\nfrom sklearn.metrics import accuracy_score\naccuracy_score(y_test, y_hat)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0.9384615384615385"},"exec_count":302}},"pos":16,"start":1661371464040,"state":"done","type":"cell"}
{"end":1661371464245,"exec_count":303,"id":"ad0594","input":"#Recall\nfrom sklearn.metrics import recall_score\nrecall_score(y_test, y_hat)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0.9333333333333333"},"exec_count":303}},"pos":17,"start":1661371464236,"state":"done","type":"cell"}
{"end":1661371464464,"exec_count":304,"id":"86caef","input":"#Precision\nfrom sklearn.metrics import precision_score\nprecision_score(y_test, y_hat)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0.9767441860465116"},"exec_count":304}},"pos":18,"start":1661371464455,"state":"done","type":"cell"}
{"end":1661371464678,"exec_count":305,"id":"b409e1","input":"#Plug in converted values into our best ML model, aka decision tree","kernel":"ds_env","pos":18.5,"start":1661371464676,"state":"done","type":"cell"}
{"end":1661371465518,"exec_count":308,"id":"3bb5ce","input":"df[df['class'] == 0].head(10)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Gender</th>\n      <th>Polyuria</th>\n      <th>Polydipsia</th>\n      <th>sudden weight loss</th>\n      <th>weakness</th>\n      <th>Polyphagia</th>\n      <th>Genital thrush</th>\n      <th>visual blurring</th>\n      <th>Itching</th>\n      <th>Irritability</th>\n      <th>delayed healing</th>\n      <th>partial paresis</th>\n      <th>muscle stiffness</th>\n      <th>Alopecia</th>\n      <th>Obesity</th>\n      <th>class</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>200</th>\n      <td>40</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>201</th>\n      <td>28</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>202</th>\n      <td>37</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>203</th>\n      <td>34</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>204</th>\n      <td>30</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>205</th>\n      <td>67</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>206</th>\n      <td>60</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>207</th>\n      <td>58</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>208</th>\n      <td>54</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>209</th>\n      <td>43</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"     Age  Gender  Polyuria  Polydipsia  sudden weight loss  weakness  \\\n200   40       1         0           1                   1         1   \n201   28       1         0           0                   1         0   \n202   37       1         0           0                   0         0   \n203   34       1         0           0                   0         0   \n204   30       1         0           0                   0         0   \n205   67       1         1           0                   0         1   \n206   60       1         0           0                   0         1   \n207   58       1         0           0                   0         0   \n208   54       1         0           0                   1         1   \n209   43       1         0           0                   1         0   \n\n     Polyphagia  Genital thrush  visual blurring  Itching  Irritability  \\\n200           0               0                1        1             0   \n201           0               0                0        0             0   \n202           0               0                0        0             0   \n203           0               0                0        0             0   \n204           0               0                0        0             0   \n205           1               0                1        1             1   \n206           0               0                0        0             0   \n207           1               0                0        1             0   \n208           0               1                0        0             0   \n209           0               1                0        0             0   \n\n     delayed healing  partial paresis  muscle stiffness  Alopecia  Obesity  \\\n200                0                1                 1         0        0   \n201                0                0                 0         0        0   \n202                0                0                 0         0        0   \n203                0                0                 0         0        0   \n204                0                0                 0         0        0   \n205                1                0                 1         1        1   \n206                0                1                 1         0        0   \n207                1                0                 0         1        1   \n208                1                0                 0         1        0   \n209                1                0                 0         1        0   \n\n     class  \n200      0  \n201      0  \n202      0  \n203      0  \n204      0  \n205      0  \n206      0  \n207      0  \n208      0  \n209      0  "},"exec_count":308}},"pos":19.5,"start":1661371465505,"state":"done","type":"cell"}
{"end":1661371465728,"exec_count":309,"id":"8de7bc","input":"x.columns","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Index(['Gender', 'Polyuria', 'Polydipsia', 'sudden weight loss', 'Polyphagia',\n       'visual blurring', 'Irritability', 'partial paresis', 'Alopecia'],\n      dtype='object')"},"exec_count":309}},"pos":20,"start":1661371465719,"state":"done","type":"cell"}
{"end":1661377367368,"exec_count":482,"id":"ce3875","input":"Gender = str(input('Gender: '))\nPolyuria = str(input('Polyuria: '))\nPolydipsia = str(input('Polydipsia: '))\nsudden_weight_loss = str(input('Sudden Weight Loss: '))\nPolyphagia = str(input('Polyphagia: '))\nVisual_Blurring = str(input('Visual Blurring: '))\nIrritability = str(input('Irritability: '))\nPartial_Paresis = str(input('Partial Paresis: '))\nAlopecia = str(input('Alopecia: '))\n\nprint(Gender, Polyuria, Polydipsia,  sudden_weight_loss, Polyphagia, Visual_Blurring, Irritability, Partial_Paresis, Alopecia)","kernel":"ds_env","output":{"0":{"name":"input","opts":{"password":false,"prompt":"Gender: "},"value":"Male"},"1":{"name":"input","opts":{"password":false,"prompt":"Polyuria: "},"value":"Yes"},"2":{"name":"input","opts":{"password":false,"prompt":"Polydipsia: "},"value":"No"},"3":{"name":"input","opts":{"password":false,"prompt":"Sudden Weight Loss: "},"value":"Yes"},"4":{"name":"input","opts":{"password":false,"prompt":"Polyphagia: "},"value":"No"},"5":{"name":"input","opts":{"password":false,"prompt":"Visual Blurring: "},"value":"Yes"},"6":{"name":"input","opts":{"password":false,"prompt":"Irritability: "},"value":"Yes"},"7":{"name":"input","opts":{"password":false,"prompt":"Partial Paresis: "},"value":"Yes"},"8":{"name":"input","opts":{"password":false,"prompt":"Alopecia: "},"value":"No"},"9":{"name":"stdout","text":"Male Yes No Yes No Yes Yes Yes No\n"}},"pos":18.625,"scrolled":true,"start":1661377342529,"state":"done","type":"cell"}
{"end":1661377381574,"exec_count":484,"id":"42e167","input":"def detect(x):\n    if x == [0] * 9:\n        return 'You do not have diabetes. I hope you still enjoyed our project :)'\n    input_data = [x]\n    pred = clf.predict(np.array(input_data))\n    if pred == 0:\n        return 'You do not have diabetes. I hope you still enjoyed our project :)'\n    else:\n        return 'You have diabetes. Please seek professional medical attention'\ndetect(Features)","kernel":"ds_env","output":{"0":{"name":"stderr","text":"/projects/b36ed0b0-d7f5-416a-895a-d63c582b0b71/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/base.py:450: UserWarning:\n\nX does not have valid feature names, but DecisionTreeClassifier was fitted with feature names\n\n"},"1":{"data":{"text/plain":"'You have diabetes. Please seek professional medical attention'"},"exec_count":484}},"pos":19,"scrolled":true,"start":1661377381560,"state":"done","type":"cell"}
{"exec_count":239,"id":"2616bc","input":"","kernel":"ds_env","output":{"0":{"ename":"TypeError","evalue":"convert() takes 1 positional argument but 9 were given","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [239]\u001b[0m, in \u001b[0;36m<cell line: 6>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m      5\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;241m0\u001b[39m\n\u001b[0;32m----> 6\u001b[0m \u001b[43mconvert\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mYes\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mNo\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mNo\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mNo\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mYes\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mNo\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mNo\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mNo\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mYes\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n","\u001b[0;31mTypeError\u001b[0m: convert() takes 1 positional argument but 9 were given"]}},"pos":21,"state":"done","type":"cell"}
{"exec_count":296,"id":"328dbe","input":"from sklearn import tree\nfrom sklearn.model_selection import GridSearchCV\nparameters = {'criterion' :('gini', 'entropy', 'log_loss'), 'splitter' :('best', 'random')}","kernel":"ds_env","pos":10,"state":"done","type":"cell"}
{"exec_count":486,"id":"c7b299","input":"def convert(x):\n    x = x.lower()\n    if x == 'yes'or x == 'male':\n        return 1\n    else:\n        return 0\n\nGender_ = convert(Gender.lower())\nPolyuria_ = convert(Polyuria.lower())\nPolydipsia_ = convert(Polydipsia.lower())\nsudden_weight_loss_ = convert(sudden_weight_loss.lower())\nPolyphagia_ = convert(Polyphagia.lower())\nVisual_Blurring_ = convert(Visual_Blurring.lower())\nIrritability_ = convert(Irritability.lower())\nPartial_Paresis_ = convert(Partial_Paresis.lower())\nAlopecia_ = convert(Alopecia.lower())\n\nFeatures = [Gender_, Polyuria_, Polydipsia_, sudden_weight_loss_, Polyphagia_, Visual_Blurring_, Irritability_, Partial_Paresis_, Alopecia_]\nprint(Features)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"[1, 1, 0, 1, 0, 1, 1, 1, 0]\n"}},"pos":18.75,"state":"done","type":"cell"}
{"id":"51a9ec","input":"","pos":5.5,"type":"cell"}
{"id":"aa2f11","input":"","pos":18.875,"type":"cell"}
{"id":"c6307f","input":"","pos":22,"type":"cell"}
{"id":"d11012","input":"","pos":18.25,"type":"cell"}
{"id":"d8b9ab","input":"","pos":19.25,"type":"cell"}
{"id":"dd59f7","input":"","kernel":"ds_env","pos":6.25,"type":"cell"}
{"id":"f9569c","input":"","pos":23,"type":"cell"}
{"id":0,"time":1661361520097,"type":"user"}
{"last_load":1661289116763,"type":"file"}