{"backend_state":"running","connection_file":"/projects/b36ed0b0-d7f5-416a-895a-d63c582b0b71/.local/share/jupyter/runtime/kernel-fa3267c0-0e46-45af-b4a8-5caa4ce0bba0.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1660676409073,"exec_count":95,"id":"706a0b","input":"import pandas as pd\nimport numpy as np\nimport plotly.express as px","kernel":"ds_env","pos":0,"start":1660676409054,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676409860,"exec_count":96,"id":"8e3a75","input":"fig = px.bar(df, x ='sudden weight loss', color ='Gender')\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"ac381c98207409e6b425a876bb0746efd1c14a07"}}},"pos":1,"scrolled":true,"start":1660676409780,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676411882,"exec_count":97,"id":"1f9786","input":"fig = px.histogram(df, x ='visual blurring', color ='Gender')\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"093ff450df1f690b9125747be4da5629b9ee5033"}}},"pos":3,"scrolled":true,"start":1660676411775,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676412819,"exec_count":98,"id":"70815d","input":"fig = px.pie(df, values ='visual blurring')\nfig.show()","kernel":"ds_env","output":{"0":{"data":{"iframe":"28f6496d799767e36121161a418931c7d84d97d1"}}},"pos":4,"start":1660676412760,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676414187,"exec_count":99,"id":"95eb17","input":"df = pd.read_csv('diabetes_data_upload.csv')","kernel":"ds_env","pos":5,"start":1660676414165,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676415044,"exec_count":100,"id":"34fddf","input":"df.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Gender</th>\n      <th>Polyuria</th>\n      <th>Polydipsia</th>\n      <th>sudden weight loss</th>\n      <th>weakness</th>\n      <th>Polyphagia</th>\n      <th>Genital thrush</th>\n      <th>visual blurring</th>\n      <th>Itching</th>\n      <th>Irritability</th>\n      <th>delayed healing</th>\n      <th>partial paresis</th>\n      <th>muscle stiffness</th>\n      <th>Alopecia</th>\n      <th>Obesity</th>\n      <th>class</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>40</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Positive</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>58</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Positive</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>41</td>\n      <td>Male</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Positive</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>45</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Positive</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>60</td>\n      <td>Male</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Positive</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Age Gender Polyuria Polydipsia sudden weight loss weakness Polyphagia  \\\n0   40   Male       No        Yes                 No      Yes         No   \n1   58   Male       No         No                 No      Yes         No   \n2   41   Male      Yes         No                 No      Yes        Yes   \n3   45   Male       No         No                Yes      Yes        Yes   \n4   60   Male      Yes        Yes                Yes      Yes        Yes   \n\n  Genital thrush visual blurring Itching Irritability delayed healing  \\\n0             No              No     Yes           No             Yes   \n1             No             Yes      No           No              No   \n2             No              No     Yes           No             Yes   \n3            Yes              No     Yes           No             Yes   \n4             No             Yes     Yes          Yes             Yes   \n\n  partial paresis muscle stiffness Alopecia Obesity     class  \n0              No              Yes      Yes     Yes  Positive  \n1             Yes               No      Yes      No  Positive  \n2              No              Yes      Yes      No  Positive  \n3              No               No       No      No  Positive  \n4             Yes              Yes      Yes     Yes  Positive  "},"exec_count":100}},"pos":6,"scrolled":true,"start":1660676415015,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676417976,"exec_count":101,"id":"55296e","input":"Visual Blurring \n\n\nWhat is Visual Blurring -  A visual symptom that makes it difficult to see clearly or sharply\n\n\nHow does this symptom relate to diabetes -  If your blood sugar levels change quickly from low to normal, the shape of your eye's lens' can be affected, and your vision can be blurred.\n\n\nWhat is the effect - Blurry or wavy vision in the center of your field of vision","kernel":"ds_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (3535386915.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [101]\u001b[0;36m\u001b[0m\n\u001b[0;31m    Visual Blurring\u001b[0m\n\u001b[0m           ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":11,"start":1660676417968,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676418466,"exec_count":102,"id":"db3b19","input":"df['Age'].isnull().values.any()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"False"},"exec_count":102}},"pos":12,"start":1660676418455,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676420126,"exec_count":103,"id":"e67a7b","input":"results = []\nfor col in df.columns:\n    missing_or_not = df[col].isnull().values.any()\n    print(col + ' ' + str(missing_or_not))","kernel":"ds_env","output":{"0":{"name":"stdout","text":"Age False\nGender False\nPolyuria False\nPolydipsia False\nsudden weight loss False\nweakness False\nPolyphagia False\nGenital thrush False\nvisual blurring False\nItching False\nIrritability False\ndelayed healing False\npartial paresis False\nmuscle stiffness False\nAlopecia False\nObesity False\nclass False\n"}},"pos":13,"start":1660676420087,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676420692,"exec_count":104,"id":"77f8cb","input":"def Change_to_Value (Input):\n    if Input == 'Yes':\n        return 1\n    else:\n        return 0","kernel":"ds_env","pos":14,"start":1660676420683,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676421408,"exec_count":105,"id":"91a3e2","input":"Change_to_Value('No')","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0"},"exec_count":105}},"pos":15,"start":1660676421399,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676422975,"exec_count":106,"id":"57e860","input":"def convert(x):\n    if x == 'Yes' or x == 'Male' or x == 'Positive':\n        return 1\n    else:\n        return 0\n","kernel":"ds_env","pos":17,"start":1660676422959,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676423652,"exec_count":107,"id":"da3e0f","input":"convert('Male')","kernel":"ds_env","output":{"0":{"data":{"text/plain":"1"},"exec_count":107}},"pos":18,"start":1660676423639,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676424231,"exec_count":108,"id":"5a5cdb","input":"df['Gender'].apply(convert)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0      1\n1      1\n2      1\n3      1\n4      1\n      ..\n515    0\n516    0\n517    0\n518    0\n519    1\nName: Gender, Length: 520, dtype: int64"},"exec_count":108}},"pos":19,"start":1660676424205,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676424848,"exec_count":109,"id":"66d53c","input":"df['Gender']","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0        Male\n1        Male\n2        Male\n3        Male\n4        Male\n        ...  \n515    Female\n516    Female\n517    Female\n518    Female\n519      Male\nName: Gender, Length: 520, dtype: object"},"exec_count":109}},"pos":20,"start":1660676424838,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676425674,"exec_count":110,"id":"daa5f9","input":"for col in df.columns:\n    if col != 'Age':\n        df[col] = df[col].apply(convert)","kernel":"ds_env","pos":21,"start":1660676425654,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676428138,"exec_count":111,"id":"5c2ae7","input":"X = df.drop(['class'], axis = 1)\nY = df['class']","kernel":"ds_env","pos":24,"start":1660676428131,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676430422,"exec_count":112,"id":"199507","input":"X = df.drop(['class'], axis = 1)\nY = df['class']","kernel":"ds_env","pos":27,"start":1660676430401,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676431273,"exec_count":113,"id":"df7b22","input":"X.corrwith(Y)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Age                   0.108679\nGender               -0.449233\nPolyuria              0.665922\nPolydipsia            0.648734\nsudden weight loss    0.436568\nweakness              0.243275\nPolyphagia            0.342504\nGenital thrush        0.110288\nvisual blurring       0.251300\nItching              -0.013384\nIrritability          0.299467\ndelayed healing       0.046980\npartial paresis       0.432288\nmuscle stiffness      0.122474\nAlopecia             -0.267512\nObesity               0.072173\ndtype: float64"},"exec_count":113}},"pos":28,"start":1660676431255,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676432229,"exec_count":114,"id":"e90e57","input":"corr = df.corr()","kernel":"ds_env","pos":29,"start":1660676432194,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676432768,"exec_count":115,"id":"668449","input":"corr = df.corr()\ncorr['class']","kernel":"ds_env","output":{"0":{"data":{"text/plain":"Age                   0.108679\nGender               -0.449233\nPolyuria              0.665922\nPolydipsia            0.648734\nsudden weight loss    0.436568\nweakness              0.243275\nPolyphagia            0.342504\nGenital thrush        0.110288\nvisual blurring       0.251300\nItching              -0.013384\nIrritability          0.299467\ndelayed healing       0.046980\npartial paresis       0.432288\nmuscle stiffness      0.122474\nAlopecia             -0.267512\nObesity               0.072173\nclass                 1.000000\nName: class, dtype: float64"},"exec_count":115}},"pos":30,"start":1660676432749,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676434479,"exec_count":116,"id":"77e84e","input":"corr = df.corr()\nfig = px.imshow(corr, aspect=\"auto\", color_continuous_scale='bupu', text_auto = True)\nfig.show()\n\n\n","kernel":"ds_env","output":{"0":{"data":{"iframe":"a119e6d43166d41857638dd0d117e29301c4b6e8"}}},"pos":31,"start":1660676434406,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676436277,"exec_count":117,"id":"d413b2","input":"corr_data = X.corrwith(Y).to_frame().reset_index()\nfig = px.bar(corr_data, x='index', y=0, title=\"Correlation between Features and Having Diabetes\")\nfig.show()\n","kernel":"ds_env","output":{"0":{"data":{"iframe":"d68037d1256d0639e218d357190912c2ab271a65"}}},"pos":33,"start":1660676436137,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676495977,"exec_count":124,"id":"50e1e3","input":"import sklearn\nfrom sklearn.model_selection import train_test_split\n\nx_train, x_test ,y_train, y_test = train_test_split(X, Y)\n","kernel":"ds_env","pos":34,"start":1660676495966,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676510952,"exec_count":127,"id":"a46f63","input":" y_train.head()","kernel":"ds_env","output":{"0":{"data":{"text/plain":"2      1\n326    0\n330    0\n496    0\n291    0\nName: class, dtype: int64"},"exec_count":127}},"pos":36,"start":1660676510937,"state":"done","type":"cell"}
{"cell_type":"code","end":1660676512768,"exec_count":128,"id":"3561f8","input":"y_test.head","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<bound method NDFrame.head of 517    1\n81     1\n299    1\n254    1\n110    1\n      ..\n213    0\n325    0\n251    1\n212    0\n33     1\nName: class, Length: 130, dtype: int64>"},"exec_count":128}},"pos":37,"start":1660676512737,"state":"done","type":"cell"}
{"cell_type":"code","id":"040e5a","input":"","pos":10,"type":"cell"}
{"cell_type":"code","id":"16b339","input":"","pos":32,"type":"cell"}
{"cell_type":"code","id":"799ef8","input":"","kernel":"ds_env","pos":35,"type":"cell"}
{"cell_type":"code","id":"9045f9","input":"","kernel":"ds_env","pos":22,"type":"cell"}
{"cell_type":"code","id":"935370","input":"","pos":16,"type":"cell"}
{"cell_type":"code","id":"c4b182","input":"","pos":2,"type":"cell"}
{"cell_type":"code","id":"de1b97","input":"","pos":23,"type":"cell"}
{"cell_type":"code","id":"e6b96e","input":"","pos":9,"type":"cell"}
{"cell_type":"code","id":"eaa7fa","input":"","pos":8,"type":"cell"}
{"cell_type":"code","id":"f95af9","input":"","pos":7,"type":"cell"}
{"cell_type":"code","id":"f9804b","input":"","kernel":"ds_env","pos":26,"type":"cell"}
{"cell_type":"code","id":"ff3350","input":"","pos":25,"type":"cell"}
{"end":1660676496976,"exec_count":125,"id":"d8c2cb","input":"print(x_train.shape)\nprint(x_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"(390, 9)\n(130, 9)\n(390,)\n(130,)\n"}},"pos":34.125,"start":1660676496960,"state":"done","type":"cell"}
{"end":1660676500835,"exec_count":126,"id":"d222c3","input":"x_test.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Gender</th>\n      <th>Polyuria</th>\n      <th>Polydipsia</th>\n      <th>sudden weight loss</th>\n      <th>Polyphagia</th>\n      <th>visual blurring</th>\n      <th>Irritability</th>\n      <th>partial paresis</th>\n      <th>Alopecia</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>517</th>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>299</th>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>254</th>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>110</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"     Gender  Polyuria  Polydipsia  sudden weight loss  Polyphagia  \\\n517       0         1           1                   1           1   \n81        0         0           0                   1           1   \n299       0         1           1                   1           1   \n254       0         1           1                   0           0   \n110       0         0           0                   1           0   \n\n     visual blurring  Irritability  partial paresis  Alopecia  \n517                1             0                1         0  \n81                 0             0                0         0  \n299                1             0                1         0  \n254                1             0                0         0  \n110                1             0                0         0  "},"exec_count":126}},"pos":34.25,"start":1660676500803,"state":"done","type":"cell"}
{"end":1660681178863,"exec_count":139,"id":"be5467","input":"from sklearn.preprocessing import StandardScaler\nss = StandardScaler()\nX_train = ss.fit_transform(X_train)\nX_test = ss.transform(X_test)\n\n","kernel":"ds_env","pos":33.75,"start":1660681178853,"state":"done","type":"cell"}
{"end":1660681179779,"exec_count":140,"id":"b5b0f2","input":"from sklearn.datasets import load_iris\nfrom sklearn.linear_model import LogisticRegression","kernel":"ds_env","pos":33.8125,"start":1660681179740,"state":"done","type":"cell"}
{"end":1660681184046,"exec_count":141,"id":"668510","input":"clf = LogisticRegression(random_state=0).fit(X, y)","kernel":"ds_env","pos":33.84375,"start":1660681184032,"state":"done","type":"cell"}
{"end":1660681185071,"exec_count":142,"id":"85b127","input":"y_hat = clf.predict(x_test)\ny_hat","kernel":"ds_env","output":{"0":{"data":{"text/plain":"array([1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n       0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1,\n       1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1,\n       1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0,\n       1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n       1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1])"},"exec_count":142}},"pos":33.859375,"start":1660681185042,"state":"done","type":"cell"}
{"end":1660681199853,"exec_count":143,"id":"4d1688","input":"#Compute your MSE.\ntotal_squared_error = (np.sum((y_test - y_hat)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have \nprint(mean_squared_error)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"0.47692307692307695\n"}},"pos":33.8671875,"start":1660681199844,"state":"done","type":"cell"}
{"end":1660681210175,"exec_count":144,"id":"277cc0","input":"#Create a confusion matrix\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":144},"1":{"data":{"image/png":"36aa06b765c2f51ce0905b74e15d574de792eb61","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":33.87109375,"start":1660681209864,"state":"done","type":"cell"}
{"end":1660681743870,"exec_count":148,"id":"5d5b35","input":"from sklearn.svm import SVC\nfrom sklearn.model_selection import StratifiedShuffleSplit\nfrom sklearn.model_selection import GridSearchCV","kernel":"ds_env","pos":33.87353515625,"start":1660681743843,"state":"done","type":"cell"}
{"end":1660682212766,"exec_count":151,"id":"1434fa","input":"from sklearn.svm import LinearSVC\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.datasets import make_classification","kernel":"ds_env","pos":33.8734130859375,"start":1660682212761,"state":"done","type":"cell"}
{"end":1660682215231,"exec_count":153,"id":"260e1f","input":"y_hat = clf.predict(x_test)\ny_hat","kernel":"ds_env","output":{"0":{"data":{"text/plain":"array([1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n       0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1,\n       1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1,\n       1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0,\n       1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n       1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1])"},"exec_count":153}},"pos":33.873504638671875,"start":1660682215221,"state":"done","type":"cell"}
{"end":1660682235168,"exec_count":154,"id":"e727d7","input":"#Compute your MSE.\ntotal_squared_error = (np.sum((y_test - y_hat)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have \nprint(mean_squared_error)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"0.46153846153846156\n"}},"pos":33.87351989746094,"start":1660682235158,"state":"done","type":"cell"}
{"end":1660683645892,"exec_count":156,"id":"fd46d6","input":"import sklearn #our favorite machine learning library\nfrom sklearn.neighbors import KNeighborsClassifier as KNN #this will import our model as KNN","kernel":"ds_env","pos":33.873534202575684,"start":1660683645886,"state":"done","type":"cell"}
{"end":1660683646645,"exec_count":157,"id":"0eab4e","input":"# Creating the KNN model object -- we need to tell it the number of neighbors to look at.\nk = 7 #number of neighbors to look at (look at 7 nearest neighbors)\nmy_KNN_model = KNN(n_neighbors=k)","kernel":"ds_env","pos":33.87353467941284,"start":1660683646637,"state":"done","type":"cell"}
{"end":1660683647994,"exec_count":158,"id":"a116e9","input":"my_KNN_model.fit(x_train, y_train) #train the model on our past results x_train (inputs) and y_train (outputs)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=7)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" checked><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=7)</pre></div></div></div></div></div>","text/plain":"KNeighborsClassifier(n_neighbors=7)"},"exec_count":158}},"pos":33.87353491783142,"start":1660683647973,"state":"done","type":"cell"}
{"end":1660683699987,"exec_count":160,"id":"ad15a6","input":"y_hat = my_KNN_model.predict(x_test)","kernel":"ds_env","pos":33.87353503704071,"start":1660683699964,"state":"done","type":"cell"}
{"end":1660683706658,"exec_count":161,"id":"15e4c1","input":"y_hat","kernel":"ds_env","output":{"0":{"data":{"text/plain":"array([0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1,\n       1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n       1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1,\n       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0,\n       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])"},"exec_count":161}},"pos":33.873535096645355,"start":1660683706637,"state":"done","type":"cell"}
{"end":1660683813471,"exec_count":162,"id":"b5c596","input":"np.array(y_test)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"array([0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n       1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1,\n       0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n       0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0,\n       0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0])"},"exec_count":162}},"pos":33.87353512644768,"start":1660683813459,"state":"done","type":"cell"}
{"end":1660683977903,"exec_count":163,"id":"a03838","input":"total_squared_error = (np.sum((y_test - y_hat)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have \nprint(mean_squared_error)\n","kernel":"ds_env","output":{"0":{"name":"stdout","text":"0.4307692307692308\n"}},"pos":33.87353514134884,"start":1660683977892,"state":"done","type":"cell"}
{"end":1660683995571,"exec_count":164,"id":"3781ed","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":164},"1":{"data":{"image/png":"e7b340d0403fdb48bb7571987cb7210227b481dd","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":33.87353514879942,"start":1660683995343,"state":"done","type":"cell"}
{"end":1660685216617,"exec_count":178,"id":"682080","input":"#Logistic regression\n#svmrbf and svm linear\n#knn\n#naive bayes\n#Decision trees\n#Random forest","kernel":"ds_env","pos":33.875,"start":1660685216614,"state":"done","type":"cell"}
{"end":1660685298705,"exec_count":182,"id":"563984","input":"import matplotlib.pyplot as plt\n\nplt.figure(figsize=(8, 6))\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')\n","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":182},"1":{"data":{"image/png":"cff7813168f0c2dc48383ca6d9b46a74ce5b4329","text/plain":"<Figure size 576x432 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":33.874755859375,"start":1660685298506,"state":"done","type":"cell"}
{"exec_count":129,"id":"05281a","input":"","kernel":"ds_env","pos":38,"state":"done","type":"cell"}
{"exec_count":130,"id":"9da828","input":"","kernel":"ds_env","pos":39,"state":"done","type":"cell"}
{"exec_count":132,"id":"5c7940","input":"","kernel":"ds_env","pos":41,"state":"done","type":"cell"}
{"exec_count":137,"id":"0f7e8c","input":"X = df.drop(['class', 'Age', 'weakness', 'Genital thrush', 'Itching', 'delayed healing', 'muscle stiffness', 'Obesity'], axis = 1)\ny = df['class']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 42)\n\n\n\n","kernel":"ds_env","pos":33.5,"state":"done","type":"cell"}
{"exec_count":152,"id":"f656c1","input":"clf = make_pipeline(StandardScaler(),LinearSVC(random_state=0, tol=1e-5))\nclf.fit(X, y)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;standardscaler&#x27;, StandardScaler()),\n                (&#x27;linearsvc&#x27;, LinearSVC(random_state=0, tol=1e-05))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;standardscaler&#x27;, StandardScaler()),\n                (&#x27;linearsvc&#x27;, LinearSVC(random_state=0, tol=1e-05))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">StandardScaler</label><div class=\"sk-toggleable__content\"><pre>StandardScaler()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearSVC</label><div class=\"sk-toggleable__content\"><pre>LinearSVC(random_state=0, tol=1e-05)</pre></div></div></div></div></div></div></div>","text/plain":"Pipeline(steps=[('standardscaler', StandardScaler()),\n                ('linearsvc', LinearSVC(random_state=0, tol=1e-05))])"},"exec_count":152}},"pos":33.87347412109375,"state":"done","type":"cell"}
{"exec_count":155,"id":"28ed9e","input":"#Create a confusion matrix\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":155},"1":{"data":{"image/png":"cb70aeb569204437569de42e97988ffdadef7d97","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":33.87352752685547,"state":"done","type":"cell"}
{"exec_count":170,"id":"f34b06","input":"","kernel":"ds_env","pos":33.87498474121094,"state":"done","type":"cell"}
{"id":"075f7d","input":"","pos":33.87353515252471,"type":"cell"}
{"id":"0a62e2","input":"#RBF","pos":33.87451171875,"type":"cell"}
{"id":"159137","input":"","pos":33.984375,"type":"cell"}
{"id":"1ba837","input":"#KNN","pos":33.87353324890137,"type":"cell"}
{"id":"2775f9","input":"","pos":47,"type":"cell"}
{"id":"2f35c2","input":"","kernel":"ds_env","pos":34.5,"type":"cell"}
{"id":"335c51","input":"","pos":33.96875,"type":"cell"}
{"id":"3a2654","input":"","kernel":"ds_env","pos":33.87499237060547,"type":"cell"}
{"id":"526811","input":"","pos":33.873046875,"type":"cell"}
{"id":"56b222","input":"","pos":46,"type":"cell"}
{"id":"56f823","input":"\n","kernel":"ds_env","pos":33.8748779296875,"type":"cell"}
{"id":"5d1418","input":"","pos":50,"type":"cell"}
{"id":"625ddf","input":"# svm linear","pos":33.873291015625,"type":"cell"}
{"id":"694191","input":"","pos":33.873531341552734,"type":"cell"}
{"id":"6ae3bf","input":"","kernel":"ds_env","pos":40,"type":"cell"}
{"id":"6b3712","input":"","kernel":"ds_env","pos":42,"type":"cell"}
{"id":"6f471c","input":"","kernel":"ds_env","pos":45,"type":"cell"}
{"id":"729a4a","input":"\n","kernel":"ds_env","pos":33.874969482421875,"type":"cell"}
{"id":"76c2dc","input":"","kernel":"ds_env","pos":44,"type":"cell"}
{"id":"8711fc","input":"","pos":33.873512268066406,"type":"cell"}
{"id":"899aa5","input":"# Logistic Regression","pos":33.78125,"type":"cell"}
{"id":"a17197","input":"\n","kernel":"ds_env","pos":33.874996185302734,"type":"cell"}
{"id":"a2c269","input":"","pos":33.9375,"type":"cell"}
{"id":"a96c03","input":"","kernel":"ds_env","pos":43,"type":"cell"}
{"id":"ad7e92","input":"","kernel":"ds_env","pos":33.87493896484375,"type":"cell"}
{"id":"ae649e","input":"","pos":49,"type":"cell"}
{"id":"b24ae0","input":"","pos":33.765625,"type":"cell"}
{"id":"d28d0f","input":"","pos":48,"type":"cell"}
{"id":"eb1172","input":"","kernel":"ds_env","pos":33.8740234375,"type":"cell"}
{"id":0,"time":1660687085385,"type":"user"}
{"last_load":1660581995565,"type":"file"}